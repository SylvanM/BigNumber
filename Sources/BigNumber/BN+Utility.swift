//
//  File.swift
//  
//
//  Created by Sylvan Martin on 5/7/20.
//

import Foundation

public extension BigNumber {
    
    // MARK: Utility Methods
    
    /**
     * Gets rid of extraneous leading zeroes
     *
     * - Returns: The normalized version of this `UBigNumber`
     */
    @discardableResult mutating func normalize() -> BigNumber {
        return BigNumber(self.magnitude.normalize())
    }
    
    /// Hashes the ```UBigNumber```
    func hash(into hasher: inout Hasher) {
        magnitude.hash(into: &hasher)
        hasher.combine(self.sign)
    }
    
    /// Sets all bytes of this number to random data generated by Apple's secure CPRNG
    ///
    /// - Parameters:
    ///     - generator: optional `SecRandomRef `, defaulted to `kSecRandomDefault`
    mutating func setToRandom(generator: SecRandomRef? = kSecRandomDefault) {
        self.magnitude.setToRandom()
        if self.magnitude != 0 {
            self.sign = [-1, 1].randomElement()!
        } else {
            self.sign = 0
        }
    }
    
//    /**
//     * Quickly set the numerical value of this `UBigNumber` to `0`, without changing the array size
//     */
//    mutating func zero() {
//        magnitude.zero()
//        sign = 0
//    }
    
}

