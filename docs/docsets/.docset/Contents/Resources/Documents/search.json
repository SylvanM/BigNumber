{"Typealiases.html#/s:9BigNumber2BNa":{"name":"BN","abstract":"<p>A signed <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/BigNumber.html\">BigNumber</a></code> object</p>"},"Typealiases.html#/s:9BigNumber3UBNa":{"name":"UBN","abstract":"<p>An unsigned <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/UBigNumber.html\">UBigNumber</a></code> object</p>"},"Structs/UBigNumber.html#/s:9BigNumber04UBigB0V5Wordsa":{"name":"Words","abstract":"<p>Word type of <code>UBigNumber</code></p>","parent_name":"UBigNumber"},"Structs/UBigNumber.html#/s:9BigNumber04UBigB0V19ArrayLiteralElementa":{"name":"ArrayLiteralElement","abstract":"<p>The element type in the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:9BigNumber3UBNa\">UBN</a></code> array</p>","parent_name":"UBigNumber"},"Structs/UBigNumber.html#/s:9BigNumber04UBigB0V18IntegerLiteralTypea":{"name":"IntegerLiteralType","abstract":"<p>The integer literal type</p>","parent_name":"UBigNumber"},"Structs/UBigNumber.html#/s:9BigNumber04UBigB0V19erasingLeadingZerosACvp":{"name":"erasingLeadingZeros","abstract":"<p>A version of this number which regularly clears leading zeros</p>","parent_name":"UBigNumber"},"Structs/UBigNumber.html#/s:9BigNumber04UBigB0V19keepingLeadingZerosACvp":{"name":"keepingLeadingZeros","abstract":"<p>A version of this number which does not regularly clear leading zeros</p>","parent_name":"UBigNumber"},"Structs/UBigNumber.html#/s:9BigNumber04UBigB0V5wordss6UInt64V5WordsVvp":{"name":"words","abstract":"<p>Words of the UBigNumber</p>","parent_name":"UBigNumber"},"Structs/UBigNumber.html#/s:9BigNumber04UBigB0V5arraySays6UInt64VGvp":{"name":"array","abstract":"<p>The array representation of the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:9BigNumber2BNa\">BN</a></code>, in Little-Endian format</p>","parent_name":"UBigNumber"},"Structs/UBigNumber.html#/s:9BigNumber04UBigB0V4sizeSivp":{"name":"size","abstract":"<p>Size of the array</p>","parent_name":"UBigNumber"},"Structs/UBigNumber.html#/s:9BigNumber04UBigB0V11sizeInBytesSivp":{"name":"sizeInBytes","abstract":"<p>The size of the integer represented by the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:9BigNumber2BNa\">BN</a></code>, in bytes</p>","parent_name":"UBigNumber"},"Structs/UBigNumber.html#/s:9BigNumber04UBigB0V8bitWidthSivp":{"name":"bitWidth","abstract":"<p>Size of the integer represented by the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:9BigNumber2BNa\">BN</a></code> in bits</p>","parent_name":"UBigNumber"},"Structs/UBigNumber.html#/s:9BigNumber04UBigB0V20trailingZeroBitCountSivp":{"name":"trailingZeroBitCount","abstract":"<p>The amount of trailing zero bits</p>","parent_name":"UBigNumber"},"Structs/UBigNumber.html#/s:9BigNumber04UBigB0V9hexStringSSvp":{"name":"hexString","abstract":"<p>Hex string representation of the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:9BigNumber2BNa\">BN</a></code></p>","parent_name":"UBigNumber"},"Structs/UBigNumber.html#/s:9BigNumber04UBigB0V12binaryStringSSvp":{"name":"binaryString","abstract":"<p>Binary string representation of thew <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:9BigNumber2BNa\">BN</a></code></p>","parent_name":"UBigNumber"},"Structs/UBigNumber.html#/s:9BigNumber04UBigB0V18formattedHexStringSSvp":{"name":"formattedHexString","abstract":"<p>Hex string representation of the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:9BigNumber2BNa\">BN</a></code>, with every 4 digits separated by a space</p>","parent_name":"UBigNumber"},"Structs/UBigNumber.html#/s:9BigNumber04UBigB0V11descriptionSSvp":{"name":"description","abstract":"<p>Hex string description of the BN used when being printed</p>","parent_name":"UBigNumber"},"Structs/UBigNumber.html#/s:9BigNumber04UBigB0V12lastBitIsSetSbvp":{"name":"lastBitIsSet","abstract":"<p>Checks if the last bit is set</p>","parent_name":"UBigNumber"},"Structs/UBigNumber.html#/s:9BigNumber04UBigB0V7exactlyACSgx_tcSBRzlufc":{"name":"init(exactly:)","abstract":"<p>Creates a new <code>UBigNumber</code> with the exact value of the passed <code>BinaryFloatingPoint</code> if it is representable. If not, this returns <code>nil</code></p>","parent_name":"UBigNumber"},"Structs/UBigNumber.html#/s:9BigNumber04UBigB0VyACxcSBRzlufc":{"name":"init(_:)","abstract":"<p>Creates a new <code>UBigNumber</code> with the integral component of whatever is passed into the initializer</p>","parent_name":"UBigNumber"},"Structs/UBigNumber.html#/s:9BigNumber04UBigB0V18truncatingIfNeededACx_tcSzRzlufc":{"name":"init(truncatingIfNeeded:)","abstract":"<p>Creates a new <code>UBigNumber</code>, truncating or extending any bits as needed</p>","parent_name":"UBigNumber"},"Structs/UBigNumber.html#/s:9BigNumber04UBigB0V8clampingACx_tcSzRzlufc":{"name":"init(clamping:)","abstract":"<p>Creates a new <code>UBigNumber</code> from a <code>BinaryInteger</code>, clamping as needed</p>","parent_name":"UBigNumber"},"Structs/UBigNumber.html#/s:9BigNumber04UBigB0V14truncatingBitsACx_tcSzRzlufc":{"name":"init(truncatingBits:)","abstract":"<p>Creates a new <code>UBigNumber</code>, truncating or extending any bits as needed</p>","parent_name":"UBigNumber"},"Structs/UBigNumber.html#/s:9BigNumber04UBigB0V7exactlyACSgx_tcSzRzlufc":{"name":"init(exactly:)","abstract":"<p>Creates a new <code>UBigNumber</code> with the exact value of the passed <code>BinaryFloatingPoint</code> if it is representable. If not, this returns <code>nil</code></p>","parent_name":"UBigNumber"},"Structs/UBigNumber.html#/s:9BigNumber04UBigB0VyACxcSzRzlufc":{"name":"init(_:)","abstract":"<p>Creates a new instance of <code>UBigNumber</code> from the given integer</p>","parent_name":"UBigNumber"},"Structs/UBigNumber.html#/s:9BigNumber04UBigB0V14integerLiteralACs6UInt64V_tcfc":{"name":"init(integerLiteral:)","abstract":"<p>Creates a UBN from an integer literal</p>","parent_name":"UBigNumber"},"Structs/UBigNumber.html#/s:9BigNumber04UBigB0V12arrayLiteralACs6UInt64Vd_tcfc":{"name":"init(arrayLiteral:)","abstract":"<p>Creates a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:9BigNumber3UBNa\">UBN</a></code> from an array literal</p>","parent_name":"UBigNumber"},"Structs/UBigNumber.html#/s:9BigNumber04UBigB0V13stringLiteralACSS_tcfc":{"name":"init(stringLiteral:)","abstract":"<p>Creates a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:9BigNumber3UBNa\">UBN</a></code> from a hexadecimal string</p>","parent_name":"UBigNumber"},"Structs/UBigNumber.html#/s:9BigNumber04UBigB0V4hash4intoys6HasherVz_tF":{"name":"hash(into:)","abstract":"<p>Hashes the <code>UBigNumber</code></p>","parent_name":"UBigNumber"},"Structs/UBigNumber.html#/s:9BigNumber04UBigB0V2eeoiySbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compares two BigNumbers, returns true if they are equal</p>","parent_name":"UBigNumber"},"Structs/UBigNumber.html#/s:9BigNumber04UBigB0V2neoiySbAC_ACtFZ":{"name":"!=(_:_:)","abstract":"<p>Compares two BigNumbers and retuns true if they are not equal</p>","parent_name":"UBigNumber"},"Structs/UBigNumber.html#/s:9BigNumber04UBigB0V1goiySbAC_ACtFZ":{"name":">(_:_:)","abstract":"<p>Greater than operator</p>","parent_name":"UBigNumber"},"Structs/UBigNumber.html#/s:9BigNumber04UBigB0V1loiySbAC_ACtFZ":{"name":"<(_:_:)","abstract":"<p>Less than operator</p>","parent_name":"UBigNumber"},"Structs/UBigNumber.html#/s:9BigNumber04UBigB0V2geoiySbAC_ACtFZ":{"name":">=(_:_:)","abstract":"<p>Greater than or Equal to Operator</p>","parent_name":"UBigNumber"},"Structs/UBigNumber.html#/s:9BigNumber04UBigB0V2leoiySbAC_ACtFZ":{"name":"<=(_:_:)","abstract":"<p>Less than or Equal to Operator</p>","parent_name":"UBigNumber"},"Structs/UBigNumber.html#/...(_:_:)":{"name":"...(_:_:)","abstract":"<p>Returns all values between two values, inclusive</p>","parent_name":"UBigNumber"},"Structs/UBigNumber.html#/s:9BigNumber04UBigB0V3zzloiySnyACGAC_xtSzRzlFZ":{"name":"..<(_:_:)","abstract":"<p>Returns all values between two values, excluding the upper bound</p>","parent_name":"UBigNumber"},"Structs/UBigNumber.html#/s:9BigNumber04UBigB0V2oeoiyyACz_xtSzRzlFZ":{"name":"|=(_:_:)","abstract":"<p>All bitwise operators can be called with an argument of a <code>UBigNumber</code> and any other object conforming to the <code>BinaryInteger</code> protocol</p>","parent_name":"UBigNumber"},"Structs/UBigNumber.html#/s:9BigNumber04UBigB0V2aeoiyyACz_xtSzRzlFZ":{"name":"&=(_:_:)","abstract":"<p>Stores the result of performing a bitwise AND operation on the two given","parent_name":"UBigNumber"},"Structs/UBigNumber.html#/s:9BigNumber04UBigB0V2xeoiyyACz_xtSzRzlFZ":{"name":"^=(_:_:)","abstract":"<p>Stores the result of performing a bitwise XOR operation on the two given","parent_name":"UBigNumber"},"Structs/UBigNumber.html#/s:9BigNumber04UBigB0V4alleoiyyACz_xtSzRzlFZ":{"name":"&<<=(_:_:)","abstract":"<p>Left bitshifts a value by another, and stores the result in the left hand side variable, with no overflow handling</p>","parent_name":"UBigNumber"},"Structs/UBigNumber.html#/s:9BigNumber04UBigB0V3lleoiyyACz_xtSzRzlFZ":{"name":"<<=(_:_:)","abstract":"<p>Left bitshifts a value by another, and stores the result in the left hand side variable</p>","parent_name":"UBigNumber"},"Structs/UBigNumber.html#/s:9BigNumber04UBigB0V3ggeoiyyACz_xtSzRzlFZ":{"name":">>=(_:_:)","abstract":"<p>Right bitshifts a value by another, and stores the result in the left hand side variable","parent_name":"UBigNumber"},"Structs/UBigNumber.html#/s:9BigNumber04UBigB0V1topyA2CFZ":{"name":"~(_:)","abstract":"<p>One&rsquo;s compliment</p>","parent_name":"UBigNumber"},"Structs/UBigNumber.html#/s:9BigNumber04UBigB0V1ooiyA2C_xtSzRzlFZ":{"name":"|(_:_:)","abstract":"<p>Bitwise OR operator</p>","parent_name":"UBigNumber"},"Structs/UBigNumber.html#/s:9BigNumber04UBigB0V1aoiyA2C_xtSzRzlFZ":{"name":"&(_:_:)","abstract":"<p>Bitwise AND operator</p>","parent_name":"UBigNumber"},"Structs/UBigNumber.html#/s:9BigNumber04UBigB0V1xoiyA2C_xtSzRzlFZ":{"name":"^(_:_:)","abstract":"<p>Bitwise XOR operator</p>","parent_name":"UBigNumber"},"Structs/UBigNumber.html#/s:9BigNumber04UBigB0V2lloiyA2C_xtSzRzlFZ":{"name":"<<(_:_:)","abstract":"<p>Left bitshifts the given BigNumber by a given integer amount with overflow handling. When the result would be of a bigger size than the","parent_name":"UBigNumber"},"Structs/UBigNumber.html#/s:9BigNumber04UBigB0V2ggoiyA2C_xtSzRzlFZ":{"name":">>(_:_:)","abstract":"<p>Right bitshifts the given BigNumber by a given integer amount</p>","parent_name":"UBigNumber"},"Structs/UBigNumber.html#/s:9BigNumber04UBigB0V3apeoiyyACz_ACtFZ":{"name":"&+=(_:_:)","abstract":"<p>Adds two <code>UBigNumber</code>s with no overflow handling. Any numbers that would usually be carried instead","parent_name":"UBigNumber"},"Structs/UBigNumber.html#/s:9BigNumber04UBigB0V2peoiyyACz_ACtFZ":{"name":"+=(_:_:)","abstract":"<p>Adds two BigNumbers and assigns the sum to the left operand</p>","parent_name":"UBigNumber"},"Structs/UBigNumber.html#/s:Sz2seoiyyxz_xtFZ":{"name":"-=(_:_:)","parent_name":"UBigNumber"},"Structs/UBigNumber.html#/s:9BigNumber04UBigB0V2meoiyyACz_ACtFZ":{"name":"*=(_:_:)","abstract":"<p>Multiplication Assignment operator</p>","parent_name":"UBigNumber"},"Structs/UBigNumber.html#/s:9BigNumber04UBigB0V3ameoiyyACz_ACtFZ":{"name":"&*=(_:_:)","abstract":"<p>Multiplication Assignment operator with no overflow handling</p>","parent_name":"UBigNumber"},"Structs/UBigNumber.html#/s:9BigNumber04UBigB0V2deoiyyACz_ACtFZ":{"name":"/=(_:_:)","abstract":"<p>No idea how this is going to work :(</p>","parent_name":"UBigNumber"},"Structs/UBigNumber.html#/s:Sz2reoiyyxz_xtFZ":{"name":"%=(_:_:)","parent_name":"UBigNumber"},"Structs/UBigNumber.html#/s:9BigNumber04UBigB0V2apoiyA2C_ACtFZ":{"name":"&+(_:_:)","abstract":"<p>Adds two BigNumbers, with no overflow handling</p>","parent_name":"UBigNumber"},"Structs/UBigNumber.html#/s:9BigNumber04UBigB0V1poiyA2C_ACtFZ":{"name":"+(_:_:)","abstract":"<p>Adds two BigNumbers</p>","parent_name":"UBigNumber"},"Structs/UBigNumber.html#/s:9BigNumber04UBigB0V1soiyA2C_ACtFZ":{"name":"-(_:_:)","abstract":"<p>Subtraction</p>","parent_name":"UBigNumber"},"Structs/UBigNumber.html#/s:9BigNumber04UBigB0V1moiyA2C_ACtFZ":{"name":"*(_:_:)","abstract":"<p>Multiplies two BigNumbers</p>","parent_name":"UBigNumber"},"Structs/UBigNumber.html#/s:9BigNumber04UBigB0V2amoiyA2C_ACtFZ":{"name":"&*(_:_:)","abstract":"<p>Multiplies two BigNumbers with no overflow handling</p>","parent_name":"UBigNumber"},"Structs/UBigNumber.html#/s:9BigNumber04UBigB0V1doiyA2C_ACtFZ":{"name":"/(_:_:)","abstract":"<p>Divides two BigNumbers</p>","parent_name":"UBigNumber"},"Structs/UBigNumber.html#/s:9BigNumber04UBigB0V1roiyA2C_ACtFZ":{"name":"%(_:_:)","abstract":"<p>Modulo operation for two <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/BigNumber.html\">BigNumber</a></code>&lsquo;s</p>","parent_name":"UBigNumber"},"Structs/BigNumber.html#/s:9BigNumberAAV5Wordsa":{"name":"Words","abstract":"<p>Word type of <code>BigNumber</code></p>","parent_name":"BigNumber"},"Structs/BigNumber.html#/s:9BigNumberAAV19ArrayLiteralElementa":{"name":"ArrayLiteralElement","abstract":"<p>The element type of a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:9BigNumber2BNa\">BN</a></code> array literal</p>","parent_name":"BigNumber"},"Structs/BigNumber.html#/s:9BigNumberAAV18IntegerLiteralTypea":{"name":"IntegerLiteralType","abstract":"<p>The integer literal type</p>","parent_name":"BigNumber"},"Structs/BigNumber.html#/s:9BigNumberAAV9Magnitudea":{"name":"Magnitude","abstract":"<p>The magnitude type of a <code>BigNumber</code></p>","parent_name":"BigNumber"},"Structs/BigNumber.html#/s:9BigNumberAAV9magnitudeAA04UBigB0Vvp":{"name":"magnitude","abstract":"<p>The magnitude of this number as a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/UBigNumber.html\">UBigNumber</a></code></p>","parent_name":"BigNumber"},"Structs/BigNumber.html#/s:9BigNumberAAV4signSivp":{"name":"sign","abstract":"<p>Whether or not the number is positive</p>","parent_name":"BigNumber"},"Structs/BigNumber.html#/s:Sz5words5WordsQzvp":{"name":"words","parent_name":"BigNumber"},"Structs/BigNumber.html#/s:Sz8bitWidthSivp":{"name":"bitWidth","parent_name":"BigNumber"},"Structs/BigNumber.html#/s:Sz20trailingZeroBitCountSivp":{"name":"trailingZeroBitCount","parent_name":"BigNumber"},"Structs/BigNumber.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"BigNumber"},"Structs/BigNumber.html#/s:9BigNumberAAV7exactlyABSgx_tcSBRzlufc":{"name":"init(exactly:)","abstract":"<p>Creates a new <code>BigNumber</code> with the exact value of the passed <code>BinaryFloatingPoint</code> if it is representable. If not, this returns <code>nil</code></p>","parent_name":"BigNumber"},"Structs/BigNumber.html#/s:9BigNumberAAVyABxcSBRzlufc":{"name":"init(_:)","abstract":"<p>Creates a new <code>BigNumber</code> with the integral component of whatever is passed into the initializer</p>","parent_name":"BigNumber"},"Structs/BigNumber.html#/s:9BigNumberAAV18truncatingIfNeededABx_tcSzRzlufc":{"name":"init(truncatingIfNeeded:)","abstract":"<p>Creates a new <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/UBigNumber.html\">UBigNumber</a></code>, truncating or extending any bits as needed</p>","parent_name":"BigNumber"},"Structs/BigNumber.html#/s:9BigNumberAAV8clampingABx_tcSzRzlufc":{"name":"init(clamping:)","abstract":"<p>Creates a new <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/UBigNumber.html\">UBigNumber</a></code> from a <code>BinaryInteger</code>, clamping as needed</p>","parent_name":"BigNumber"},"Structs/BigNumber.html#/s:9BigNumberAAV14truncatingBitsABx_tcSzRzlufc":{"name":"init(truncatingBits:)","abstract":"<p>Creates a new <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/UBigNumber.html\">UBigNumber</a></code>, truncating or extending any bits as needed</p>","parent_name":"BigNumber"},"Structs/BigNumber.html#/s:9BigNumberAAV7exactlyABSgx_tcSzRzlufc":{"name":"init(exactly:)","abstract":"<p>Creates a new <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/UBigNumber.html\">UBigNumber</a></code> with the exact value of the passed <code>BinaryFloatingPoint</code> if it is representable. If not, this returns <code>nil</code></p>","parent_name":"BigNumber"},"Structs/BigNumber.html#/s:9BigNumberAAVyABxcSzRzlufc":{"name":"init(_:)","abstract":"<p>Creates a new instance of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/UBigNumber.html\">UBigNumber</a></code> from the given integer</p>","parent_name":"BigNumber"},"Structs/BigNumber.html#/s:9BigNumberAAV14integerLiteralABs5Int64V_tcfc":{"name":"init(integerLiteral:)","abstract":"<p>Creates a UBN from an integer literal</p>","parent_name":"BigNumber"},"Structs/BigNumber.html#/s:9BigNumberAAV12arrayLiteralABs6UInt64Vd_tcfc":{"name":"init(arrayLiteral:)","abstract":"<p>Creates a positive <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:9BigNumber2BNa\">BN</a></code> from an array literal</p>","parent_name":"BigNumber"},"Structs/BigNumber.html#/s:9BigNumberAAV13stringLiteralABSS_tcfc":{"name":"init(stringLiteral:)","abstract":"<p>Creates a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:9BigNumber2BNa\">BN</a></code> from a hexadecimal string</p>","parent_name":"BigNumber"},"Structs/BigNumber.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"BigNumber"},"Structs/BigNumber.html#/s:9BigNumberAAV2neoiySbAB_ABtFZ":{"name":"!=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigNumber"},"Structs/BigNumber.html#/s:SL1goiySbx_xtFZ":{"name":">(_:_:)","parent_name":"BigNumber"},"Structs/BigNumber.html#/s:SL1loiySbx_xtFZ":{"name":"<(_:_:)","parent_name":"BigNumber"},"Structs/BigNumber.html#/s:SL2geoiySbx_xtFZ":{"name":">=(_:_:)","parent_name":"BigNumber"},"Structs/BigNumber.html#/s:SL2leoiySbx_xtFZ":{"name":"<=(_:_:)","parent_name":"BigNumber"},"Structs/BigNumber.html#/s:s13SignedNumericP1sopyxxFZ":{"name":"-(_:)","parent_name":"BigNumber"},"Structs/BigNumber.html#/s:Sz3lleoiyyxz_qd__tSzRd__lFZ":{"name":"<<=(_:_:)","parent_name":"BigNumber"},"Structs/BigNumber.html#/s:Sz3ggeoiyyxz_qd__tSzRd__lFZ":{"name":">>=(_:_:)","parent_name":"BigNumber"},"Structs/BigNumber.html#/s:Sz2aeoiyyxz_xtFZ":{"name":"&=(_:_:)","parent_name":"BigNumber"},"Structs/BigNumber.html#/s:Sz2oeoiyyxz_xtFZ":{"name":"|=(_:_:)","parent_name":"BigNumber"},"Structs/BigNumber.html#/s:Sz2xeoiyyxz_xtFZ":{"name":"^=(_:_:)","parent_name":"BigNumber"},"Structs/BigNumber.html#/s:Sz1topyxxFZ":{"name":"~(_:)","parent_name":"BigNumber"},"Structs/BigNumber.html#/s:Sz1doiyxx_xtFZ":{"name":"/(_:_:)","parent_name":"BigNumber"},"Structs/BigNumber.html#/s:Sz2deoiyyxz_xtFZ":{"name":"/=(_:_:)","parent_name":"BigNumber"},"Structs/BigNumber.html#/s:Sz1roiyxx_xtFZ":{"name":"%(_:_:)","parent_name":"BigNumber"},"Structs/BigNumber.html#/s:Sz2reoiyyxz_xtFZ":{"name":"%=(_:_:)","parent_name":"BigNumber"},"Structs/BigNumber.html#/s:Sz2seoiyyxz_xtFZ":{"name":"-=(_:_:)","parent_name":"BigNumber"},"Structs/BigNumber.html#/s:Sz1soiyxx_xtFZ":{"name":"-(_:_:)","parent_name":"BigNumber"},"Structs/BigNumber.html#/s:Sz2peoiyyxz_xtFZ":{"name":"+=(_:_:)","parent_name":"BigNumber"},"Structs/BigNumber.html#/s:Sz1poiyxx_xtFZ":{"name":"+(_:_:)","parent_name":"BigNumber"},"Structs/BigNumber.html#/s:Sz2meoiyyxz_xtFZ":{"name":"*=(_:_:)","parent_name":"BigNumber"},"Structs/BigNumber.html#/s:Sz1moiyxx_xtFZ":{"name":"*(_:_:)","parent_name":"BigNumber"},"Structs/BigNumber.html":{"name":"BigNumber","abstract":"<p>A signed integer of unfixed width</p>"},"Structs/UBigNumber.html":{"name":"UBigNumber","abstract":"<p>An unsigned integer type of unfixed size</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"},"Typealiases.html":{"name":"Type Aliases","abstract":"<p>The following type aliases are available globally.</p>"}}