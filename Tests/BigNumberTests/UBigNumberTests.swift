//
//  UBigNumberTests.swift
//  
//
//  Created by Sylvan Martin on 6/1/22.
//

import XCTest
import BigNumber

class UBigNumberTests: XCTestCase {

    override func setUpWithError() throws {
        // Put setup code here. This method is called before the invocation of each test method in the class.
    }

    override func tearDownWithError() throws {
        // Put teardown code here. This method is called after the invocation of each test method in the class.
    }

    func testExample() throws {
        // This is an example of a functional test case.
        // Use XCTAssert and related functions to verify your tests produce the correct results.
        // Any test you write for XCTest can be annotated as throws and async.
        // Mark your test throws to produce an unexpected failure when your test encounters an uncaught error.
        // Mark your test async to allow awaiting for asynchronous code to complete. Check the results with assertions afterwards.
    }

    func testPerformanceExample() throws {
        // This is an example of a performance test case.
        self.measure {
            // Put the code you want to measure the time of here.
        }
    }
    
    func testTemp() throws {
        let a: UBN = "0x2EC64DDFC60B42204862EFA12C35973D2E871283E2EA4EB9DF30CB1B501E434C"
        let b: UBN = "0xAC42518BF63B731220D4CD212118D440636CCA11D22B9891937F2B2428657E35"
        
        _ = a * b
    }
    
    // MARK: Initializers
    
    func testIntegerInitialiers() {
        
        // Test using integer literal

        var a: UBN = 235631424632

        XCTAssertEqual(a.words, [235631424632])

        a = 0xF243EACD

        XCTAssertEqual(a.words, [0xF243EACD])
        
        a = 18446744073709551615
        
        XCTAssertEqual(a.words, [18446744073709551615])

        // Test integer conversions

        for _ in 1...1000 {
            let randomInt = UBN.WordType.random(in: 0...UBN.WordType.max)

            a = UBN(randomInt)
            
            XCTAssertEqual(a.words, [randomInt])
        }
        
    }
    
    func testStringInitializers() {
        
        var a: UBN = "1555555555555555555555555555555555555555555555555555555555555555400000000000000000000000000000000"

        XCTAssertEqual(a.words, [1, 0x5555555555555555, 0x5555555555555555, 0x5555555555555555, 0x5555555555555554, 0x0000000000000000, 0x0000000000000000].reversed())

        a = ""

        XCTAssertEqual(a.words, [0])

        a = "0x"

        XCTAssertEqual(a.words, [0])

        a = "FFFFFFFFAAAAAAAACCCCCCCCDDDDDDDD"

        XCTAssertEqual(a.words, [0xCCCCCCCCDDDDDDDD, 0xFFFFFFFFAAAAAAAA])
        
        a = [1, 2, 3, 4]
        
        print(a)
        
    }
    
    func testFloatingPointInitializers() {
        
        var a = UBN()

        XCTAssertEqual(a.words, [0])

        a = 4.225334e10
        
        XCTAssertEqual(a.words, [42253340000])

        a = 92.23453246e36
        
        XCTAssertEqual(a.words, [0x2DFEEFDC80000000, 0x4563B96D41449B90])
        
        a = 18446744073e8
        
        XCTAssertEqual(a.words, [UInt(1844674407300000000)])
        
    }
    
    // MARK: Properties
    
    func testProperties() {
        
        
        
        // general cases
        for _ in 0...255 {
            let powOfTwo = UBN(1) << UBN.init(secureRandomBytes: 1)
            XCTAssertTrue(powOfTwo.isPowerOfTwo)
        }

        // corner cases
        let zero: UBN = 0
        XCTAssertFalse(zero.isPowerOfTwo)

        // test size properties

        for _ in 0...255 {
            let rand = UBN(secureRandomBytes: Int.random(in: 1...8))
            XCTAssertEqual(rand.size, rand.words.count)
        }

        for _ in 0...255 {
            let integer = Int.random(in: 0...Int.max)
            let ubn = UBN(integer)!
            XCTAssertEqual(ubn.bitWidth, Int(log2(Double(integer))) + 1)
        }

        var a: UBN
        
        for i in 0...100 {
            
            let shift = i
            
            a = 1
            
            a.leftShift(by: i)
            
            XCTAssertEqual(a.leastSignificantWord, 1 << i)
    
            XCTAssertTrue(a.isPowerOfTwo)
            
            XCTAssertEqual(a.trailingZeroBitCount, shift)
            
            XCTAssertEqual(a.mostSignificantSetBitIndex, shift)
            XCTAssertTrue(a.isNormal)
            
        }
        
        a = 0
        
        XCTAssertTrue(a.isZero)
        
        for _ in 1...100 {
            
            a = UBN.random(words: Int.random(in: 1...10))
            
            XCTAssertTrue(a.isNormal)
            
            XCTAssertTrue((a.binaryCompliment + a + 1).isPowerOfTwo)
            
        }
        
    }
    
    // MARK: Bitwise Operation Testing

    func testUnsignedBitwiseShifting() {
        
        for i in 0..<64 {
            var shifted: UBN = 1
            shifted.leftShift(by: i)
            
            let correct = UBN.WordType(1) << i
            
            XCTAssertEqual(shifted.leastSignificantWord, correct)
        }
        
        var a: UBN
        
        for i in 0..<63 {
            
            a = 1
            let shift = i
            
            a.leftShift(by: i)
            
            XCTAssertEqual(a.leastSignificantWord, 1 << i)
    
            XCTAssertTrue(a.isPowerOfTwo)
            
            if !a.isPowerOfTwo {
                print(a)
                print(shift)
            }
            
            XCTAssertEqual(a.trailingZeroBitCount, shift)
            
            XCTAssertEqual(a.mostSignificantSetBitIndex, shift)
            XCTAssertTrue(a.isNormal)
            
        }

        var x = UBN()
        let y: UBN = "7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffed"
        let z: UBN = "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"

        x[bit: 0] = 1
        x <<= 255
        x -= 19
        XCTAssertTrue(x.isNormal)
        XCTAssertEqual(x, y) // XCTAssertEqual failed: ("0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFED") is not equal to ("0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFED")

        x >>= 255
        XCTAssertTrue(x.isNormal)
        XCTAssertTrue(x.isZero)
        x.normalize()
        x[bit: 0] = 1
        x <<= 256
        x -= 1
        XCTAssertTrue(x.words.allSatisfy { $0 == UInt.max } )

        XCTAssertTrue(x.isNormal)
        XCTAssertEqual(x.bitWidth, 256)

        x = z << 129
        XCTAssertEqual(x, "1555555555555555555555555555555555555555555555555555555555555555400000000000000000000000000000000")

        for i in 0...129 {
            XCTAssertFalse(x[bit: i] == 1)
        }

        XCTAssertTrue(x.isNormal)

        x >>= 380
        XCTAssertTrue(x.isNormal)
        XCTAssertEqual(x, 0x15)

        x >>= 73
        XCTAssertTrue(x.isNormal)
        XCTAssertTrue(x.isZero)
        XCTAssertEqual(x.bitWidth, 0)

    }
    
    /**
     * Tests subscripts and methods for bit manipulation
     */
    func testUnsignedBitManipulators() {

        var x = UBN()
        let y: UBN = "7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffee"

        XCTAssertTrue(x.isNormal)

        x[bit: 0] = 1
        XCTAssertTrue(x.isNormal && x[bit: 0] == 1 && x.bitWidth == 1)

        x[bit: 0] = 0
        XCTAssertTrue(x.isNormal && x[bit: 0] == 0 && x.bitWidth == 0)

        x[bit: 63] = 1
        XCTAssertTrue(x.isNormal && x[bit: 63] == 1 && x.bitWidth == 64)

        x[bit: 63] = 0
        XCTAssertTrue(x.isNormal && x[bit: 63] == 0 && x.bitWidth == 0)

        x[bit: 64] = 1
        XCTAssertTrue(x.isNormal)
        XCTAssertTrue(x[bit: 64] == 1)
        XCTAssertTrue(x.bitWidth == 65)

        x[bit: 64] = 0
        XCTAssertTrue(x.isNormal && x[bit: 64] == 0 && x.bitWidth == 0)

        x[bit: 256] = 0
        XCTAssertTrue(x.isNormal && x.isZero)

        x[bit: 256] = 1
        XCTAssertTrue(x.isNormal && x[bit: 256] == 1 && x.bitWidth == 257)

        x[bit: 256] = 0
        XCTAssertTrue(x.isNormal && x.isZero)

        x.normalize()
        XCTAssertTrue(x.isNormal && x.isZero)

        for i in 0..<255 {
            x[bit: i] = 1
        }

        x[bit: 0] = 0
        x[bit: 4] = 0

        XCTAssertEqual(x, y)
    }
    
    /**
     * Bitwise operator testing
     *
     * Tests:
     * - AND
     * - OR
     * - XOR
     */
    func testBitwiseLogicalOperators() {

        let x: UBN = "aaaaaaaaaaaaaaaa6666666666666666aaaaaaaaaaaaaaaa6666666666666666"
        var y: UBN = "f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0"

        var correctAnd: UBN = "a0a0a0a0a0a0a0a06060606060606060a0a0a0a0a0a0a0a06060606060606060"
        var result = x & y
        XCTAssertTrue(result.isNormal)
        XCTAssertEqual(result, correctAnd, "AND Failed")

        var correctOr: UBN = "fafafafafafafafaf6f6f6f6f6f6f6f6fafafafafafafafaf6f6f6f6f6f6f6f6"
        result = x | y
        XCTAssertTrue(result.isNormal)
        XCTAssertEqual(result, correctOr, "OR Failed")

        var correctXor: UBN = "5a5a5a5a5a5a5a5a96969696969696965a5a5a5a5a5a5a5a9696969696969696"
        result = x ^ y
        XCTAssertTrue(result.isNormal)
        XCTAssertEqual(result, correctXor, "XOR Failed")
        
        // test with unequal lengths

        y.rightShift(by: 64)

        correctAnd = "6060606060606060a0a0a0a0a0a0a0a06060606060606060"
        result = x & y
        XCTAssertTrue(result.isNormal)
        XCTAssertEqual(result, correctAnd, "AND with unequal lengths failed")
        
        correctOr = "aaaaaaaaaaaaaaaaf6f6f6f6f6f6f6f6fafafafafafafafaf6f6f6f6f6f6f6f6"
        result = x | y
        XCTAssertTrue(result.isNormal)
        XCTAssertEqual(result, correctOr, "OR with unequal lengths failed")
    
        correctXor = "aaaaaaaaaaaaaaaa96969696969696965a5a5a5a5a5a5a5a9696969696969696"
        result = x ^ y
        XCTAssertTrue(result.isNormal) // XCTAssertTrue failed
        XCTAssertEqual(result, correctXor, "XOR with unequal lengths failed")
        
    }
    
    // MARK: Subscript Testing

    /**
     * Subscript tests
     */
    func testUnsignedSubscripts() {

        measure {
            var ubn: UBN = 0
            ubn[safe: 8] = 1
            XCTAssertEqual(ubn.words, [0, 0, 0, 0, 0, 0, 0, 0, 1])

            ubn = [13471348, 9921369, 118891239923, 238, 1023]
            ubn[safe: 5] = 2341234
            XCTAssertEqual(ubn.words, [13471348, 9921369, 118891239923, 238, 1023, 2341234])

            // test the bit subscript

            // test the "8" bit (so the 4th bit from 0)
            var number = UBN(secureRandomBytes: Int.random(in: 1...5))
            number |= 8
            XCTAssertTrue(number[bit: 3] == 1)

            // generate random power of 2 to test
            let bitIndex = Int.random(in: 0...UInt.bitSize)
            let powOfTwo = UInt(1) << bitIndex
            number = UBN(powOfTwo)
            XCTAssertTrue(number[bit: bitIndex] == 1)
            XCTAssertTrue(number[bit: bitIndex + 1] == 0)
        }

    }
    
    // MARK: Operations
    
    func testAdditionAndSubtraction() {
        
        var a: UBN = "0xEBEF8C44434A5D9CEA28B9AA85B3F51CAF7FBC633EA750FCEC4C0A8E26AA7A3A65340B4FA4BC170E55C051F5272475D5"
        var b: UBN = "0x
        var c: UBN = "0x2b6c24f999a9867cac7083145f161c1c24d3a31455d91882d155329167b1a3e1799465f98c662f5dd9e1fa82cf2aca300b1bd5a9a5575b9cabd85b2808bebadc827f0c2c4deeeac15d53284cb30a16e6c6a3ceffad0613fe06e0d8a8c754c490bc4366d3d6870e9f8b4d1777f48971481031fdf99db1807d709cbdc59918d4709a3677671f8cfc609f5ab5e0c522ab3ddeafbaa383a60eeb77b87a11e21d7d3b984f23710bdc8b0d2fd42974e9c0cc85eccc88b6364a6158e456fc7be601afc6ba476a371cd873ad67f0a467900e9183bde8714234b42d562f6be12c9d482fbce0807c1077ad57b99b649d9f96591490a5bd7577a4abde62489c542865551c730fc33d8659e5ad53b9c2032956fa6228f0fd0591da5ec339831a2efe98c8ec75c67ee3a9c7e7932901186e48eb8be19082ebc3230f873332d7525b443abdb2a5d5c98af526d773464794e6a5b68e003e9ec82ebad2206d29aa0a46b67c98a30046b9ef8c1006928d552f2931fcdd8510086a8bf7ae8a35cf30ee60a7818919fd02e50757c9fe56ac0937c575f3dc4896bb4761bbdfa4db1bd67a602206060c190fa4b813a0ea9ec02045f3493e53c075c1f650b4ddb2556ceffef96a7e11d765c23b44fbc01151684eb5800aad950c9a49ca3dca0cbdde101ec45c4022744445da27db7367e8efb8ac63c2b084c1d2c5125b05ecadae63905940d3bfa33a01be6ed6e00a8b0fb780face4623b01eb4aab525b8486924df8b63610f9d865d6e64b7f13f123b3bd1087454364f709120a34e25bb3fc8b07205f5de247420040c99d970819eb6321dd32c52fa1c3d6e6aadca38454e57a99e7ae5174598bdcc9cccd971ef290c36dfef12f9782819c6bdd0bf9e8765c9fb8d69008c648854a5fea58693fad18544536c67f36638d0afe6511890cd5c8025590889f182d78eee37967da1a507c757d35724e2ee2c02b116a2b5394745b64444c95b4b8669781453af59fc1d6ab4e1731021d6d2f4e359f298927673bcea36577e80fb70979b633c4e8a1a8e847f7fb7fad1090c8157e94ae3daee26cbfe2637a296f5faeaa215a3e6c1a0ad7b353aeda47e4a1f1c68b91da2ba5fd1585e08177fa59d74b7a750bd36"
        
        XCTAssertEqual(a + b, c)
        XCTAssertEqual(c - b, a)
        XCTAssertEqual(c - a, b)
        
        let d: UBN = "
        let e: UBN = "
        let f: UBN = ""
        
        XCTAssertEqual(e - d, f)
        XCTAssertEqual(d + f, e)
        XCTAssertEqual(e - f, d)
        
        for _ in 1...100 {
            a = UBN.random(words: Int.random(in: 10...1000))
            b = UBN.random(words: Int.random(in: 10...1000))
            c = a + b
            
            XCTAssertEqual(c - b, a)
            XCTAssertEqual(c - a, b)
        }
        
    }
    
    func testMultiplicationAndDivision() {
        
        let factorA:    UBN = "0xEBEF8C44434A5D9CEA28B9AA85B3F51CAF7FBC633EA750FCEC4C0A8E26AA7A3A65340B4FA4BC170E55C051F5272475D5"
        let factorB:    UBN = "0x
        let product:    UBN = "0x2804e7b25d7150df71aeed1923e02aeb047c490ce6ab6f636d8d6acb87cfcc939e8ddaf7e96e4dfe949523e8a00c30e767ad1d68b30b36de8e6f78baffa141f62b9c87810d0136fbc5140490d57e0ca741813978122a7c2e9ea1d505adc121198887d0a9614b2ab2e58b6fc802aadee66baedc4ff1b2b25511ef73865ff0bee8781f1571e86d399efb3573ff7c580e0e5fb17bb65a18c6426a2d48ac947e51d6b47b0af72e6616c418b94dee8c70ce99d0da4d8443b849486abbab7ab90dbf88a7771a3300c642a5ef202ddbf74a001ca0d8c0184fa90ff8d795d20326e203f0ceb0223d884dab296ac92eefe627411c43a4106d97ea8de3374e81cf5a922de29ee2d5d3bf8e74e6a9215fc2e835be335fdb2751e7a47198be6dca428f230c7ac6c0ec9aeed1bd2ccdaa2b6e19dca8e251aa61c92b4126b367e2809175e02e8bf13cbe8966d800f9f7bc030847ee4b15c661f0dae845a51eb54b3774ad5c7aa425781bce8485a8c5d82dd45998999d0ec50b6b948e54aa2808dbbd08b252438b8b7da5de2da2d378e41e5f8b1b28228bdc57483f9ace4eae04044dd1033e2b92874242c77349b071958d4a6fac0696dce1ecd492ace80d430307ced00b0c75faa31f83ae5c9cbbb51a24fd86624dc09e512d212fd0dec09c04a15f57a969b7c74e24e5cfc0a7e608482e87cf6e108923679a4a192054ce3d50394324e754b86f987aca42601ec743785573e0d8971bd70ba24a14d97932ee0adcc164caadbe58db2ed67467b9608fb64ae565dbf56cbffa9aa7f1feeda58f3de2560fd882e6b0f4d334df10247339cf96cf645a2893d52c33d476b0be0aac7cba4494845e0034b046def760c36a00971dc961f5065d7a0397c770d3fc76304848742f3e3fb9a48535ca0774c84b74110d58ed753339a0a7bac66391418afd4f9848cad970a483c0d12a881b29d65693497b05c234d93601a85a1ab12bd88124271540c70b4a65b4b697e70c700347051c436a63f8dd6d95aea1b02b1bf259a926d4aa5f2a0ff9fdaba6cde5e1de02e3e8a859fb187947c2c1d73b51d435dc421bcdf3e332aa2323df0461c938ecb6f674d1860111736667eed0c37128151516b9cd27f68f4affd81afc34115d8fe2f61fab7160dc334c868a8de97bb18bfded66f01811f949e1f95c0e22d4ac551573779657b21ab8b5"
        let quotient:   UBN = "0x2f1d799e5dc81244be2a75b50dce85c6e32f31c97d902e93f13f15256d0bf17d41762b57e739048ae0f2e1d188e4210e723c28122bf17d98db3ddca1e44e8a55eaab86155158d48107cbd757ee44bd11d59573abc6a3554089bf40b4af3efee68576f70a77f28cdf937099f6459aa300785161e63516cf84ba8c8fd9cc678fa7c57025fadffee498f5fbc460a4e3f5b1875875511bdebfcf32121ecbdd6df4842687d24ebbfee35096ac149a286e216e4eb37f30c0848450576a949b45d2fad80e31967a935fcb6bc00bdb091e82931e0db4f3e21a22f7efab2e9ae3e125d38ffce104d87323173ed4764dc468d645d0a9930e826134e74cfd4aef9c1fd9f5e102f1ffac610db1a60bb21e858ac283f60dd745b9b883cc360c2b47e0ac7ad0da84b8967dee77129adaee437f476ccdf7dab9791854806dc85f0ee46bc90a582449e743296e08e0a12ef4fe3362b4544b4c9223fc8663ecf1cf6a5dfeb0ee7a557d9d12b95b710913c7b37a557330d7c95c26900c73c7c2afc8b8edf744e46b16c9cfb151e7b5218660477ea1b00aa92fbc596a145bde2f8cf076687c8e6e05dbb3b0ac73b91f5c593de5a17de2b5b9cac63674df785150b56d3ebe4f71d2430057ae263c04e650a80f9011268c92e73feb8cb10ddc29004bb7a2787a12a31442b3ba7fd8a40ff752fbedb1afa548ba35d61250fe0a005f41f82ac04e9da3ed228244cf94cff4b768c5113d31ca762b26e94a53fa03987fa2c282fe61e9f7ee356c10952e036ba3a89ba29222ec3b6095911e6d803e76711d69ff102a987de6fa7f1c40047ccaaa871f03595f0bf0a4f0bee08e0f842b71d3ac7094573517299548d024a6f9ad9de11302218ffac4a6d3afabfd05e2e16fed0d42880339a0e22840bafca552a3d42f0456581551dcb4b020e594ef6052bedb22b15ff69240bc2995ccb2ab0b5efcb32d1334eabc301fd626d9de113e127ce3065038e58c403e77c9d3254d88daf8b38c90f173aab70b623fa2ca9ba98d2ccbc6a87d967d7addc39261c813061195089a42e2c17afb83c7"
        let remainder:  UBN = "0xebef8c44434a5d9cea28b9aa85b3f51caf7fbc633ea750fcec4c0a8e26aa7a3a65340b4fa4bc170e55c051f5272475d5"
        
        XCTAssertEqual(factorA * factorB, product)
        XCTAssertEqual(factorB / factorA, quotient)
        XCTAssertEqual(factorA % factorB, remainder)
        
        let d: UBN = "0xD21254E2FEAC304A521B5FB8950918429D725B434430972B1F789C562DA7211A12BB9309D55FC490E23A74CA"
        let e: UBN = "0xDE2592CE88DDFC411970706B5DFDDE91BBD97808A9CC1149A5D7337A26535249971B4BDE6DD65602A38E89A9E5BFDB1"
        let f: UBN = "0xb64ababb0d21ca95e6633cc958ae92fee0a43cde85b8369939f7e664420db12e1ab23d447fe0de3879bfdb9b2899160ca54e0a467e070b3c61bc49ebb1df5d326cd692a8604514e00bb588bb093c78fc92173e838cbe8205fa461aa"
        
        XCTAssertEqual(e * d, f)
        XCTAssertEqual(f / e, d)
        
        // Smaller (more realistic) integer sizes
        let smallerA: UBN = "0xF55425D78A39772FB563B5D7DE7CD5FE0F2DA65AF822F317AAC34C4778F708B5"
        let smallerB: UBN = "0xCE2B2A8CB8B197153166450A1EBC981E00CFD8E252E7CBD35586C2D738E6CF8F"
        let correctProduct: UBN = "0xc593145c75a72f4674e4ef77734eeca8628f80b1097c8e8bbc663c76890b4877fd3506467b8697b0388af63283fb71bd55299e2ff1f15685ec419898bca6381b"
        
        let computedProduct = smallerA * smallerB
        let computedQuotientA = correctProduct / smallerA
        let computedQuotientB = computedProduct / smallerB
        
        XCTAssertEqual(computedProduct, correctProduct) // passes
        XCTAssertEqual(computedQuotientA, smallerB) // fails. computed quotient: 0xCE2B2A8CB8B197153166450A1EBC981E00CFD8E252E7CBD35586C2D738E6CF8F
        XCTAssertEqual(computedQuotientB, smallerA) // fails. computed quotient: 0xF55425D78A39772FB563B5D7DE7CD5FE0F2DA65AF822F317AAC34C4778F708B5
        
        let cqDiffA = computedQuotientA - smallerB
        let cqDiffB = computedQuotientB - smallerA
        
        print("Printing Difference")
        print(UBN("0xCE2B2A8CB8B197153166450A1EBC981E00CFD8E252E7CBD35586C2D738E6CF8F") - UBN("0xCE2B2A8CB8B197153166450A1EBC981E00CFD8E252E7CBD35586C2D738E6CF8F"))
        
        XCTAssertEqual(cqDiffA, 0)
        XCTAssertEqual(cqDiffB, 0)
        
        for _ in 1...100 {

            var a = UBN(1)
            var b = UBN.random(words: 5)

            XCTAssertEqual(b / a, b)

            b = a

            XCTAssertEqual(a / b, b / a)
            XCTAssertEqual(a / b, 1)

            a = 0

            XCTAssertEqual(a / b, 0)
            
            a = UBN.random(words: 10)
            b = UBN.random(words: 5)
            let c = a * b
            
            XCTAssertEqual(c / b, a)
            XCTAssertEqual(c / a, b)

        }
        
    }
    
    func testCraziness() {
        // calculate a factorial of a ludicrously big number!
        
        var a: UBN = 170
        
        var fact: UBN = 1
        
        while a > 1 {
            fact *= a
            a -= 1
        }
        
        print(fact)
        
    }
    
    func testUnsignedAdditionMultiplicationSymmetry() {
        
        for i in 1...256 {
            
            let a = UBN.random(words: i)
            
            XCTAssertEqual(a + a, 2 * a)
            
            var accumulator: UBN = 0
            
            let scalar = Int.random(in: 0...100)
            
            for _ in 0..<scalar {
                accumulator.add(a)
            }
            
            XCTAssertEqual(accumulator, scalar * a, "Repeated addition and multiplication are the same")
        }
        
    }
    
    func testEvilDivision() {
        let a: UBN = "0x7B428446BEA9CBC2F05FC6CC012888DDFD0B8B718FA83D4D9E6FE0791798729E4E35F3D056E0EAA72B8613826A118C2E3834358B31D0F8EA5504E3DBCB36E1"
        let b: UBN = "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFED"
        
        _ = a / b
        
    }

}
